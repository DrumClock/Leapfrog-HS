#########################################################################
#      Define LCD menu  "Calibration"  in User settings
#########################################################################
#
#
# Main
# ...   
#   + User menu
#     + Calibration
#        + Screw tilt
#           + CALCULATE
#           + Result <only info>
#           + RETRY          
#        + Probe z-offset
#           + CALIBRATE 
#           + Move Z
#           + ACCEPT
#           + ABORT
#        + SAVE CONFIG
#

################  Enable menu #############################

[menu __main __user __calib]
type: list
enable: {(not printer.idle_timeout.state == "Printing")}
name: Calibration

[menu __main __user __calib __screwtilt]
type: list
enable: {'screws_tilt_adjust' in printer}
name: Screw tilt

[menu __main __user __calib __probe]
type: list
name: Probe z-offset
enable: {'probe' in ptinter or 'bltouch' in printer}

[menu __main __user __calib __save]
type: command
name: SAVE CONFIG
gcode: SAVE_CONFIG


############## Screw tilt menu ####################

[menu __main __user __calib __screwtilt __calculate]
type: command
name: CALCULATE
gcode:   
    {% if "xyz" not in printer.toolhead.homed_axes %}
     G28
    {% endif %}
    SCREWS_TILT_CALCULATE
    
#---------------------------------

[menu __main __user __calib __screwtilt __results]
type: list
name: Results	
	
[menu __main __user __calib __screwtilt __results __1]
type: command
name: {printer['screws_tilt_adjust'].results.screw4.sign}{"      "}{printer['screws_tilt_adjust'].results.screw3.sign}

[menu __main __user __calib __screwtilt __results __2]
type: command
name: {printer['screws_tilt_adjust'].results.screw4.adjust}{"   "}{printer['screws_tilt_adjust'].results.screw3.adjust}

[menu __main __user __calib __screwtilt __results __3]
type: command
#name: {printer['screws_tilt_adjust'].results.screw1.sign}{"      "}{printer['screws_tilt_adjust'].results.screw2.sign}
name: {"BASE"}{"     "}{printer['screws_tilt_adjust'].results.screw2.sign}

[menu __main __user __calib __screwtilt __results __4]
type: command
#name: {printer['screws_tilt_adjust'].results.screw1.adjust}{"   "}{printer['screws_tilt_adjust'].results.screw2.adjust}
name: {"-----"}{"   "}{printer['screws_tilt_adjust'].results.screw2.adjust}

#---------------------------------

[menu __main __user __calib __screwtilt __retry]	
type: command
name: RETRY
gcode: SCREWS_TILT_CALCULATE

############## Probe z-offset menu  ##############

[menu __main __user __calib __probe __calibrate]
type: command
name: CALIBRATE
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
     G28
    {% endif %}    
    G0 Z5
    PROBE_CALIBRATE
    
#---------------------------------

[menu __main __user __calib __probe __move_z]
type: input
name: Move Z: {'%03.2f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_step: 1
realtime: True
gcode:
    {% if menu.event == 'change' %}
        G1 Z{'%.2f' % menu.input}
    {% elif menu.event == 'long_click' %}
        G1 Z{'%.2f' % menu.input}
        SAVE_GCODE_STATE NAME=__move__axis
        G91
        G1 Z2
        G1 Z-2
        RESTORE_GCODE_STATE NAME=__move__axis
    {% endif %}

#---------------------------------

[menu __main __user __calib __probe __test_z]
type: input
name: Test Z: {['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
input: 6
input_min: 0
input_max: 11
input_step: 1
gcode:
    {% if menu.event == 'long_click' %}
        TESTZ Z={['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
    {% endif %}

#---------------------------------
[menu __main __user __calib __probe __accept]
type: command
name: ACCEPT
gcode: ACCEPT

#---------------------------------
[menu __main __user __calib __probe __abort]
type: command
name: ABORT
gcode: ABORT	

