##########################################################
# Define HW configuration in printer.cfg
#
# [firmware_retraction]
# retract_length: 0.6
# retract_speed: 30
# unretract_extra_length: 0
# unretract_speed: 30
# 
##########################################################

#####################################################################
#  Variable for this configurations
#  ATTENTION: 
#  KLIPPER merges all [gcode_macro VARIABLE] into one configuration file.
#  If the variable name already exists it will be overwritten!
#####################################################################

[gcode_macro VARIABLE]
gcode:

variable_retract_z_hop: { }    

#####################################################################
# Creating a list of variables from the printer configuration
# using [gcode_macro RUN_MACRO_INIT] which will run
# in [delayed_gcode _INIT] after restarting FW Klipper.
#
# This macro finds all defined _INIT_* macros and runs them.
# The start order can be defined by names: _A_INIT_* , _B_INIT_* etc.
#####################################################################

[gcode_macro _INIT_RETRACT_Z_HOP]
gcode:
  {% set user_vars = printer["gcode_macro VARIABLE"] %}

 ### init defautl param
   {% set name = "retract_z_hop" %}    # name variable
   {% set init = { } %}     # default preset   
  
   {% set _dummy = init.update({'enable': false, 'change':false, 'step':0.4, 'layer':0.0 , 'speed':36000}) %}                    
    
    {action_respond_info("Creating a list of variables for z-hop") if printer.save_variables.variables.dump_list}   
      SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name} VALUE="{init}"


##########################################################
# PRINTER MANAGEMENT -  G10/ G11 with Z-HOP 
# Redefine G-code command G10 
##########################################################

[gcode_macro SET_RETRACT_Z_HOP]
gcode:
 
     {% set user_vars = printer["gcode_macro VARIABLE"] %} 
     {% set name = "retract_z_hop" %}    # name variable
     {% set init = user_vars[name] %}   
     
     {% set _dummy = init.update( { 'change':true} ) %} 
      SET_GCODE_VARIABLE MACRO=VARIABLE  VARIABLE={name}  VALUE="{init}" 

#---------------------------------------------------------------------------------
         
[gcode_macro G10]
rename_existing: G10.1
description: Overide "G10"  retract macro
gcode:

    {% set user_vars = printer["gcode_macro VARIABLE"] %} 
    {% set name = "retract_z_hop" %}    # name variable
    {% set init = user_vars[name] %}     
    
       ###  firmware retract  
        G10.1
	
     {% if init.enable and "xyz" in printer.toolhead.homed_axes %}
       {% set retract_pos = printer['gcode_move'].gcode_position.z %}              
       {% set _dummy = init.update( { 'layer': retract_pos} ) %} 
          SET_GCODE_VARIABLE MACRO=VARIABLE  VARIABLE={name}  VALUE="{init}" 
          G91                                  # use relative coordinates
          G1 Z{init.step}  F{init.speed}       # Z-hop
          G90                                  # use absolute coordinates             
     {% endif %}     

#---------------------------------------------------------------------------------

[gcode_macro G11]
rename_existing: G11.1
description: Overide "G11" unretract macro
gcode:

    {% set user_vars = printer["gcode_macro VARIABLE"] %} 
    {% set name = "retract_z_hop" %}    # name variable 
    {% set init = user_vars[name] %}   
    
	        
     {% if init.enable and "xyz" in printer.toolhead.homed_axes %}
        {%  set unretract_pos = printer['gcode_move'].gcode_position.z %}       
        {%  set retract_pos = init.layer + init.step %}                         

      ### return z-hop only in the same layer, not when changing layer height
        {% if retract_pos == unretract_pos %}       
          G91                                       # use relative coordinates
          G1 Z{init.step *-1 }  F{init.speed}       # Z-hop
          G90                                       # use absolute coordinates             
       {% endif %}     
     {% endif %}
     
     ### firmware unretract     
       G11.1 
 
     ### change "enable" Z-hop after G11  
      {% if init.change %} 
        {% set value = false if init.enable else true %}  
        {% set info = 'enable'  if  value  else  'disable' %}   
        
        {% set _dummy = init.update( { 'enable': value, 'change':false} ) %} 
          {action_respond_info(" Z-hop with G-code G10/G11 is %s "  % info )}
          
            SET_GCODE_VARIABLE MACRO=VARIABLE  VARIABLE={name}  VALUE="{init}" 
      {% endif %}    

     