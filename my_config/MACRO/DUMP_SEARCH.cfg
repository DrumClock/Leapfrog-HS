[gcode_macro DUMP_PRINTER_PARAM]
description: Debug: Print entries of the printer object  DUMP_PRINTER_PARAM  SHOW=[ all | object | not defined ]
gcode:

  {% set out = [] %}
  {% set ns = namespace(show=true) %} 

  {% if params.SHOW  is defined %}
    {% set show = params.SHOW|lower %}
      {% if show =='all' %}
        {% set reject = ['configfile','gcode_macro','gcode','save_variables'] %}
      {% else %} 
        {% for object in printer|sort %}
          {% if show in object %}
             {% for parameter, value in printer[object].items()|sort %}
                {% set _dummy = out.append("printer['%s'].%s = %s" % (object, parameter, value)) %}
                {% set ns.show =false %}
             {% endfor %} 
          {% endif %} 
        {% endfor %} 
      {% endif %}       
  {% else %} 
    {% set reject = ['configfile','gcode_macro','bed_mesh','gcode','mcu','save_variables'] %}
  {% endif %}   
       
  {% if ns.show %}    
    {% for object in printer|sort %}
      {% set ns = namespace(detect=true) %}   
      
      {% for test in reject|sort %}
        {% if test in object %} {% set ns.detect =false %} {% endif %}          
        {% if 'gcode_move' in object %} {% set ns.detect =true %} {% endif %}    
        {% if 'gcode_button' in object %} {% set ns.detect =true %} {% endif %}  
      {% endfor %} 
       
      {% if ns.detect %}
        {% for parameter, value in printer[object].items()|sort %}
         {% set _dummy = out.append("printer['%s'].%s = %s" % (object, parameter, value)) %}
        {% endfor %} 
      {% endif %}       
    {% endfor %}  
  {% endif %}
  
  
  {% if out|length == 0 %}{% set _dummy = out.append("Nothing found for \"DUMP_PRINTER_PARAM %s\"" % rawparams) %}{% endif %}
  {action_respond_info(out|join("\n"))}

#---------------------------------------------------------------------- 

[gcode_macro DUMP_CONFIG]
description: Debug: Print all entries of the printer config object.
gcode:

 {% set var = params.VAR|lower if params.VAR is defined else 'asdfg' %}
 {% set parameters = namespace(output = '') %}
 {% set donotwant1 = ['gcode_macro','gcode','display_data','display_glyph','display_template','menu'] %}
 {% set donotwant2 = ['aliases','points','calibrate','gcode'] %}

  {% set ns = namespace(detect=true, loop=true) %}   
	 	 
     {% for name1 in printer.configfile.config|sort %}	 
         {% set ns.detect =true %}  
		 
         {% for test in donotwant1|sort %}
           {% if test in name1 %} {% set ns.detect =false %} {% endif %}           	   
         {% endfor %}        
       
	   {% if var != 'asdfg' %} {% set ns.loop =false %} {% endif %}  
	   {% if var in name1 %} {% set ns.loop =true %} {% endif %}
	  
       {% if ns.detect and ns.loop %}   
        
          {% set parameters.output = parameters.output + "---------------------------------------------------------" + "\n" %}
            
	       {% for name2 in printer.configfile.config[name1] %}
              {% if name2 is not in donotwant2 %}
                {% set param = "printer.configfile.config['%s'].%s = %s" % (name1, name2, printer.configfile.config[name1][name2]) %}
                {% set parameters.output = parameters.output +  param + "\n" %}
              {% endif %}    
            {% endfor %}

            {% set parameters.output = parameters.output + "\n" %} 

            {% for name2 in printer.configfile.settings[name1] %}
             {% if name2 is not in donotwant2 %}
                {% set param = "printer.configfile.settings['%s'].%s = %s" % (name1, name2, printer.configfile.settings[name1][name2]) %}
                {% set parameters.output = parameters.output +  param + "\n" %}
              {% endif %}    
            {% endfor %}
			
		   {% if var in name1 %} {% set ns.loop = false %}  {% endif %}	
          
       {% endif %}
       
    {% endfor %}
  
  {action_respond_info(parameters.output)}
  
 
#----------------------------------------------------------------------   

[gcode_macro DUMP_MACRO_GCODE]
description: Debug: Print entries of the printer object containing gcode_macro
gcode:
  {% set out = [] %}
  {% for object in printer|sort %}
    {% if object != 'configfile' and 'gcode_macro' is in object %}
      {% for parameter, value in printer[object].items()|sort %}
        {% set _dummy = out.append("printer['%s'].%s = %s" % (object, parameter, value)) %}
      {% endfor %}       
    {% endif %}
  {% endfor %}
  {% if out|length == 0 %}{% set _dummy = out.append("Nothing found for \"DUMP_GCODE %s\"" % rawparams) %}{% endif %}
  {action_respond_info(out|join("\n"))}
  
#---------------------------------------------------------------------- 

[gcode_macro DUMP_LCD]
description: Debug: Print all entries of the LCD settings.
gcode:
 
 {% set parameters = namespace(output = '') %}
 {% set only = ['display_data','display_glyph','display_template','menu'] %}
 {% set donotwant2 = ['data','text','gcode'] %}
 
   {% for name1 in printer.configfile.settings|sort %}
     {% set ns = namespace(detect=false) %}     
       {% for test in only|sort %}
         {% if test in name1 %}{% set ns.detect =true %}{% endif %}    
       {% endfor %} 
       
      {% if ns.detect %}     
          {% for name2 in printer.configfile.settings[name1] %}
              {% if name2 is not in donotwant2 %}
                {% set param = "printer.configfile.settings['%s'].%s = %s" % (name1, name2, printer.configfile.settings[name1][name2]) %}
                {% set parameters.output = parameters.output +  param + "\n" %}
              {% endif %}    
            {% endfor %}
       {% endif %}
    {% endfor %}
 
  
  {action_respond_info(parameters.output)}
#---------------------------------------------------------------------- 

[gcode_macro SEARCH_VARS]
#### SEARCH_VARS s=extruder
#### Additionally, omitting the "s" parameter will just dump out literally everything
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}